BindingResult
- 스프링이 제공하는 검증 오류를 보관하는 객체
- BindingResult 객체는 꼭 @modelAttribute 뒤에 와야 한다.
  : 따라서 BindingResult 는 이미 본인이 검증해야 할 객체인 target 을 알고 있다.
  : log.info("objectName={}", bindingResult.getObjectName());
  : log.info("target={}", bindingResult.getTarget());

- 자동으로 View 에 넘겨주므로 model.addAttribute 해줄 필요 없다.
- @ModelAttribute 에 데이터 바인딩 시, 오류가 발생해도 컨트롤러가 호출된다.
  : 오류 발생 시, 스프링이 FieldError 를 생성하면서 사용자가 입력한 값을 넣어 반환한다.
  : 만약 BindingResult 없을 경우? 400 에러
- BindingResult 는 인터페이스이며 Errors 인터페이스를 extends 하고 있다.
  실제로 넘어오는 구현체는 BeanPropertyBindResult 이며, 둘다 구현하고 있으므로 Errors 를 사용해도 된다.
  하지만 Errors 인터페이스는 단순한 오류 저장과 조회 기능만 제공한다.

- 파라미터
  objectName – @ModelAttribute 이름
  field – 오류가 발생한 필드 이름
  rejectedValue – 검증 실패 시, 초기화 될 값
  bindingFailure – 바인딩에 실패한 것인가? T/F
  codes – 오류 메시지
  arguments – 오류 메시지에서 사용하는 인자
  defaultMessage – 오류 기본 메시지